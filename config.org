#+property: header-args :exports code :results silent :tangle config.el :noweb no-export

* Preface
#+include: README.org
** On the "Literateness" of this document
This document tangles to multiple files, namely =config.el=, =packages.el=, and =init.el=, and it frequently uses noweb to insert code blocks into other code blocks. When exported these details aren't visible. This means that the exported version should not be used as the sole source of truth, and you will need to reference the actual =config.org= document for full picture.

* Doom modules
:PROPERTIES:
:header-args: :tangle no :results silent :noweb-ref doom-modules
:END:
All doom defined modules appear in the following sections. Those that I use are uncommented.
When you add or remove a module, ensure to run bin/doom sync command from the emacs directory, or when inside doom emacs of course 'SPC hrr'.
** Initialisation
#+begin_src emacs-lisp :tangle init.el :noweb no-export :noweb-ref no
;;; init.el -*- lexical-binding: t; -*-

(doom!
 <<doom-modules>>
 )
#+end_src

** Completion
#+begin_src emacs-lisp
       :completion
       ;;vertico           ; the search engine of the future
       ;;company           ; the ultimate code completion backend
       ;;helm              ; the *other* search engine for love and life
       ;;ido               ; the other *other* search engine...
       ;;ivy               ; a search engine for love and life
#+end_src

** UI
#+begin_src emacs-lisp

       :ui
       ;;doom              ; what makes DOOM look the way it does
       ;;doom-dashboard    ; a nifty splash screen for Emacs
       ;;modeline          ; snazzy, Atom-inspired modeline, plus API
       ;;vc-gutter         ; vcs diff in the fringe
       ;;deft              ; notational velocity for Emacs
       ;;doom-quit         ; DOOM quit-message prompts when you quit Emacs
       ;;(emoji +unicode)  ; ðŸ™‚
       ;;hl-todo           ; highlight TODO/FIXME/NOTE/DEPRECATED/HACK/REVIEW
       ;;hydra             ; man made menus
       ;;indent-guides     ; highlighted indent columns
       ;;ligatures         ; ligatures and symbols to make your code pretty again
       ;;minimap           ; show a map of the code on the side
       ;;nav-flash         ; blink cursor line after big motions
       ;;neotree           ; a project drawer, like NERDTree for vim
       ;;ophints           ; highlight the region an operation acts on
       ;;(popup +defaults) ; tame sudden yet inevitable temporary windows
       ;;tabs              ; a tab bar for Emacs
       ;;treemacs          ; a project drawer, like neotree but cooler
       ;;unicode           ; extended unicode support for various languages
       ;;vi-tilde-fringe   ; fringe tildes to mark beyond EOB
       ;;window-select     ; visually switch windows
       ;;workspaces        ; tab emulation, persistence & separate workspaces
       ;;zen               ; distraction-free coding or writing
#+end_src

** Editor

       :editor
       ;;(evil +everywhere); come to the dark side, we have cookies
       ;;file-templates    ; auto-snippets for empty files
       ;;fold              ; (nigh) universal code folding
       ;;(format +onsave)  ; automated prettiness
       ;;god               ; run Emacs commands without modifier keys
       ;;lispy             ; vim for lisp, for people who don't like vim
       ;;multiple-cursors  ; editing in many places at once
       ;;objed             ; text object editing for the innocent
       ;;parinfer          ; turn lisp into python, sort of
       ;;rotate-text       ; cycle region at point between text candidates
       snippets            ; my elves. They type so I don't have to
       word-wrap           ; soft wrapping with language-aware indent
#+end_src

** Emacs
#+begin_src emacs-lisp

       :emacs
       ;;dired             ; making dired pretty [functional]
       ;;electric          ; smarter, keyword-based electric-indent
       ;;undo              ; persistent, smarter undo for your inevitable mistakes
       ;;ibuffer           ; interactive buffer management
       ;;vc                ; version-control and Emacs, sitting in a tree
#+end_src

** Terminal
#+begin_src emacs-lisp

       :term
       ;;eshell            ; the elisp shell that works everywhere
       ;;shell             ; simple shell REPL for Emacs
       ;;term              ; basic terminal emulator for Emacs
       ;;vterm             ; the best terminal emulation in Emacs
#+end_src

** Checkers
#+begin_src emacs-lisp

       :checkers
       ;;syntax            ; tasing you for every semicolon you forget
       ;;(spell +flyspell) ; tasing you for misspelling mispelling
       ;;grammar           ; tasing grammar mistake every you make
#+end_src

** Tools
#+begin_src emacs-lisp

       :tools
       ;;ansible           ; configuration language
       ;;biblio            ; Writes a PhD for you (citation needed)
       ;;debugger          ; FIXME stepping through code, to help you add bugs
       ;;direnv
       ;;docker
       ;;editorconfig      ; let someone else argue about tabs vs spaces
       ;;ein               ; tame Jupyter notebooks with emacs
       ;;(eval +overlay)   ; run code, run (also, repls)
       ;;gist              ; interacting with github gists
       ;;lookup            ; navigate your code and its documentation
       ;;lsp               ; M-x vscode - language server protocol
       ;;magit             ; a git porcelain for Emacs
       ;;make              ; run make tasks from Emacs
       ;;pass              ; password manager for nerds
       ;;pdf               ; pdf enhancements
       ;;prodigy           ; FIXME managing external services & code builders
       ;;rgb               ; creating color strings
       ;;taskrunner        ; taskrunner for all your projects
       ;;terraform         ; infrastructure as code
       ;;tmux              ; an API for interacting with tmux
       ;;upload            ; map local to remote projects via ssh/ftp
#+end_src

** Operating Systems
#+begin_src emacs-lisp

       :os
       ;;(:if IS-MAC macos); improve compatibility with macOS
       ;;tty               ; improve the terminal Emacs experience
#+end_src

** Languages
#+begin_src emacs-lisp

       :lang
       ;;emacs-lisp        ; drown in parentheses
       ;;org               ; organize your plain life in plain text
       ;;agda              ; types of types of types of types...
       ;;beancount         ; mind the GAAP
       ;;(cc +lsp)         ; C > C++ == 1
       ;;clojure           ; java with a lisp
       ;;common-lisp       ; if you've seen one lisp, you've seen them all
       ;;coq               ; proofs-as-programs
       ;;crystal           ; ruby at the speed of c
       ;;csharp            ; unity, .NET, and mono shenanigans
       ;;data              ; config/data formats
       ;;(dart +flutter)   ; paint ui and not much else
       ;;dhall
       ;;elixir            ; erlang done right
       ;;elm               ; care for a cup of TEA?
       ;;erlang            ; an elegant language for a more civilized age
       ;;ess               ; emacs speaks statistics
       ;;factor
       ;;faust             ; dsp, but you get to keep your soul
       ;;fortran           ; in FORTRAN, GOD is REAL (unless declared INTEGER)
       ;;fsharp            ; ML stands for Microsoft's Language
       ;;fstar             ; (dependent) types and (monadic) effects and Z3
       ;;gdscript          ; the language you waited for
       ;;(go +lsp)         ; the hipster dialect
       ;;(graphql +lsp)    ; Give queries a REST
       ;;(haskell +lsp)    ; a language that's lazier than I am
       ;;hy                ; readability of scheme w/ speed of python
       ;;idris             ; a language you can depend on
       ;;json              ; At least it ain't XML
       ;;(java +lsp)       ; the poster child for carpal tunnel syndrome
       ;;javascript        ; all(hope(abandon(ye(who(enter(here))))))
       ;;julia             ; a better, faster MATLAB
       ;;kotlin            ; a better, slicker Java(Script)
       ;;latex             ; writing papers in Emacs has never been so fun
       ;;lean              ; for folks with too much to prove
       ;;ledger            ; be audit you can be
       ;;lua               ; one-based indices? one-based indices
       ;;markdown          ; writing docs for people to ignore
       ;;nim               ; python + lisp at the speed of c
       ;;nix               ; I hereby declare "nix geht mehr!"
       ;;ocaml             ; an objective camel
       ;;php               ; perl's insecure younger brother
       ;;plantuml          ; diagrams for confusing people more
       ;;purescript        ; javascript, but functional
       ;;python            ; beautiful is better than ugly
       ;;qt                ; the 'cutest' gui framework ever
       ;;racket            ; a DSL for DSLs
       ;;raku              ; the artist formerly known as perl6
       ;;rest              ; Emacs as a REST client
       ;;rst               ; ReST in peace
       ;;(ruby +rails)     ; 1.step {|i| p "Ruby is #{i.even? ? 'love' : 'life'}"}
       ;;rust              ; Fe2O3.unwrap().unwrap().unwrap().unwrap()
       ;;scala             ; java, but good
       ;;(scheme +guile)   ; a fully conniving family of lisps
       ;;sh                ; she sells {ba,z,fi}sh shells on the C xor
       ;;sml
       ;;solidity          ; do you need a blockchain? No.
       ;;swift             ; who asked for emoji variables?
       ;;terra             ; Earth and Moon in alignment for performance.
       ;;web               ; the tubes
       ;;yaml              ; JSON, but readable
       ;;zig               ; C, but simpler
#+end_src

** Email
#+begin_src emacs-lisp

       :email
       ;;(mu4e +org +gmail)
       ;;notmuch
       ;;(wanderlust +gmail)
#+end_src

** Applications
#+begin_src emacs-lisp

       :app
       ;;calendar
       ;;emms
       ;;everywhere        ; *leave* Emacs!? You must be joking
       ;;irc               ; how neckbeards socialize
       ;;(rss +org)        ; emacs as an RSS reader
       ;;twitter           ; twitter client https://twitter.com/vnought
#+end_src

** Config
#+begin_src emacs-lisp

       :config
       literate            ; Tangle this config file
       (default            ; Reasonable defaults
         +bindings
         +smartparens)     ; Smart parenthesis
#+end_src
